backend = "xrender";
vsync = true;

use-damage = true;
log-level = "warn";

detect-rounded-corners = true;
detect-client-opacity = true;
detect-transient = true;

# Fading
fading = true;
fade-in-step = 0.01;
fade-out-step = 0.01;
fade-delta = 1;
no-fading-openclose = false;
no-fading-destroyed-argb = false;

# Animations global toggle
animations = true;
animation-stiffness = 0;

# Window animations
animations = (
  {
    triggers = [ "open" ];
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0.35, 0.9, 0.4, 1.05)";
      start = 0;
      end = 1;
      duration = 1;
    };
    scale-y = "scale-x";
  },

  {
    triggers = [ "close" ];
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0.35, -0.05, 0.35, 0)";
      duration = 0.75;
      start = 1;
      end = 0;
    };
    scale-y = "scale-x";
    opacity = 1;
  },

  {
    triggers = [ "show" ];
    offset-x = {
      curve = "cubic-bezier(0.35, 1, 0.4, 1)";
      start = "window-monitor-width";
      end = 0;
      duration = 0.75;
    };
  },

  {
    triggers = [ "hide" ];
    offset-x = {
      curve = "cubic-bezier(0.1, 1, 0.65, 1)";
      start = 0;
      end = "window-monitor-width * -1";
      duration = 0.75;
    };
    opacity = 1;
  },

  {
    triggers = [ "geometry" ];
    scale-x = {
      curve = "cubic-bezier(0, 1, 0.5, 1.06)";
      duration = 0.5;
      start = "window-width-before / window-width";
      end = 1;
    };
    scale-y = {
      curve = "cubic-bezier(0, 1, 0.5, 1.06)";
      duration = 0.5;
      start = "window-height-before / window-height";
      end = 1;
    };
    offset-x = {
      curve = "cubic-bezier(0, 1, 0.5, 1.06)";
      duration = 0.5;
      start = "window-x-before - window-x";
      end = 0;
    };
    offset-y = {
      curve = "cubic-bezier(0, 1, 0.5, 1.06)";
      duration = 0.5;
      start = "window-y-before - window-y";
      end = 0;
    };
  }
);

# Window-specific rules
rules = (
  # Remove rounding for fullscreen windows
  {
    match = "fullscreen";
    corner-radius = 0;
  },

  # Polybar animations and no corner rounding
  {
    match = "class_g = 'Polybar'";
    corner-radius = 0;
    animations = (
      {
        triggers = [ "open", "show" ];
        offset-y = {
          curve = "cubic-bezier(0.25, 1, 0.5, 1.3)";
          start = "-3 - window-height";
          end = "window-monitor-y";
          delay = 0.5;
          duration = 0.75;
        };
      },
      {
        triggers = [ "close", "hide" ];
        opacity = 1;
        offset-y = {
          curve = "cubic-bezier(0.5, -0.6, 0.25, 1)";
          start = "window-monitor-y";
          end = "-3 - window-height";
          duration = 0.75;
        };
      }
    );
  },

  # Popup and utility windows with radius and slide animation
  {
    match = "window_type = 'utility' || window_type = 'popup_menu'";
    corner-radius = 15;
    animations = (
      {
        triggers = [ "open", "show" ];
        preset = "slide-in";
        direction = "up";
        duration = 0.75;
      },
      {
        triggers = [ "close", "hide" ];
        preset = "slide-out";
        direction = "up";
        duration = 0.75;
      }
    );
  },

  # Rofi
  {
    match = "class_g = 'Rofi'";
    corner-radius = 0;
    animations = (
      {
        triggers = [ "open", "show" ];
        preset = "appear";
        duration = 0.5;
      },
      {
        triggers = [ "close", "hide" ];
        preset = "disappear";
        duration = 0.5;
      }
    );
  },

  # Notifications
  {
    match = "window_type = 'notification'";
    corner-radius = 0;
    animations = (
      {
        triggers = [ "show", "open" ];
        offset-x = {
          curve = "cubic-bezier(0, 0, 0, 1.15)";
          start = "window-monitor-x + window-width";
          end = "window-monitor-x";
          duration = 0.75;
        };
      },
      {
        triggers = [ "hide", "close" ];
        offset-x = {
          curve = "cubic-bezier(0.5, -0.05, 0.5, 0)";
          start = "window-monitor-x";
          end = "window-monitor-x + window-width";
          duration = 0.75;
        };
        opacity = 1;
      }
    );
  },

  # Popup Messages
  {
	match = "window_type = 'tooltip'";
	animations = (
	  {
		triggers = [ "open", "show" ];
		preset = "appear";
		duration = 0.25;
	  },
	  {
		triggers = [ "close", "hide" ];
		preset = "disappear";
		duration = 0.25;
	  }
	)
  }
);
